- name: "SCORED | 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled"
  lineinfile:
    dest: /etc/modprobe.d/CIS.conf
    regexp: "^(#)?install cramfs(\\s|$)"
    line: "install cramfs /bin/true"
    create: yes
  when:
    - u1804cis_rule_1_1_1_1
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.1
    - cramfs

- name: "SCORED | 1.1.1.1 | PATCH | Remove cramfs module"
  modprobe:
    name: cramfs
    state: absent
  when:
    - u1804cis_rule_1_1_1_1
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.1
    - cramfs

- name: "SCORED | 1.1.1.2 | PATCH | Ensure mounting of freevxfs filesystems is disabled"
  lineinfile:
    dest: /etc/modprobe.d/CIS.conf
    regexp: "^(#)?install freevxfs(\\s|$)"
    line: "install freevxfs /bin/true"
    create: yes
  when:
    - u1804cis_rule_1_1_1_2
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.2
    - freevxfs

- name: "SCORED | 1.1.1.2 | PATCH | Remove freevxfs module"
  modprobe:
    name: freevxfs
    state: absent
  when:
    - u1804cis_rule_1_1_1_2
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.2
    - freevxfs

- name: "SCORED | 1.1.1.3 | PATCH | Ensure mounting of jffs2 filesystems is disabled"
  lineinfile:
    dest: /etc/modprobe.d/CIS.conf
    regexp: "^(#)?install jffs2(\\s|$)"
    line: "install jffs2 /bin/true"
    create: yes
  when:
    - u1804cis_rule_1_1_1_3
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.3
    - jffs2

- name: "SCORED | 1.1.1.3 | PATCH | Remove jffs2 module"
  modprobe:
    name: jffs2
    state: absent
  when:
    - u1804cis_rule_1_1_1_3
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.3
    - jffs2

- name: "SCORED | 1.1.1.4 | PATCH | Ensure mounting of hfs filesystems is disabled"
  lineinfile:
    dest: /etc/modprobe.d/CIS.conf
    regexp: "^(#)?install hfs(\\s|$)"
    line: "install hfs /bin/true"
    create: yes
  when:
    - u1804cis_rule_1_1_1_4
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.4
    - hfs

- name: "SCORED | 1.1.1.4 | PATCH | Remove hfs module"
  modprobe:
    name: hfs
    state: absent
  when:
    - u1804cis_rule_1_1_1_4
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.4
    - hfs

- name: "SCORED | 1.1.1.5 | PATCH | Ensure mounting of hfsplus filesystems is disabled"
  lineinfile:
    dest: /etc/modprobe.d/CIS.conf
    regexp: "^(#)?install hfsplus(\\s|$)"
    line: "install hfsplus /bin/true"
    create: yes
  when:
    - u1804cis_rule_1_1_1_5
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.5
    - hfsplus

- name: "SCORED | 1.1.1.5 | PATCH | Remove hfsplus module"
  modprobe:
    name: hfsplus
    state: absent
  when:
    - u1804cis_rule_1_1_1_5
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.5
    - hfsplus

- name: "SCORED | 1.1.1.6 | PATCH | Ensure mounting of udf filesystems is disabled"
  lineinfile:
    dest: /etc/modprobe.d/CIS.conf
    regexp: "^(#)?install udf(\\s|$)"
    line: "install udf /bin/true"
    create: yes
  when:
    - u1804cis_rule_1_1_1_6
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.6
    - udf

- name: "SCORED | 1.1.1.6 | PATCH | Remove udf module"
  modprobe:
    name: udf
    state: absent
  when:
    - u1804cis_rule_1_1_1_6
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.6
    - udf

- name: "SCORED | 1.1.2 | PATCH | Ensure separate partition exists for /tmp | enable and start/restart tmp.mount"
  copy:
    src: etc/systemd/system/tmp.mount
    dest: /etc/systemd/system/tmp.mount
    owner: root
    group: root
    mode: 0755
  notify: systemd restart tmp.mount
  when:
    - u1804cis_rule_1_1_2
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.2

- name: "SCORED | 1.1.3 | PATCH | Ensure nodev option set on /tmp partition\n
         SCORED | 1.1.4 | PATCH | Ensure nosuid option set on /tmp partition\n
         | drop custom tmp.mount"
  copy:
    src: etc/systemd/system/tmp.mount
    dest: /etc/systemd/system/tmp.mount
    owner: root
    group: root
    mode: 0644
  notify: systemd restart tmp.mount
  when:
    - u1804cis_rule_1_1_3
    - u1804cis_rule_1_1_4
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.3
    - rule_1.1.4

- name: "SCORED | 1.1.5 | PATCH | Ensure separate partition exists for /var"
  shell: mount | grep "on /var "
  register: var_mounted
  changed_when: no
  failed_when: no
  when:
    - u1804cis_rule_1_1_5
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.5
    - skip_ansible_lint

- name: "SCORED | 1.1.6 | PATCH | Ensure separate partition exists for /var/tmp"
  shell: mount | grep "on /var/tmp "
  register: var_tmp_mounted
  changed_when: no
  failed_when: no
  when:
    - u1804cis_rule_1_1_6
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.6
    - skip_ansible_lint

- name: "SCORED | 1.1.7  | PATCH | Ensure nodev option set on /var/tmp partition\n
         SCORED | 1.1.8  | PATCH | Ensure nosuid option set on /var/tmp partition\n
         SCORED | 1.1.9 | PATCH | Ensure noexec option set on /var/tmp partition"
  mount:
    name: /var/tmp
    src: "{{ u1804cis_vartmp['source'] }}"
    state: mounted
    fstype: "{{ u1804cis_vartmp['fstype'] }}"
    opts: "{{ u1804cis_vartmp['opts'] }}"
  when:
    - u1804cis_vartmp['enabled'] == 'yes'
    - u1804cis_rule_1_1_7
    - u1804cis_rule_1_1_7
    - u1804cis_rule_1_1_9
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.7
    - rule_1.1.8
    - rule_1.1.9

- name: "SCORED | 1.1.10 | PATCH | Ensure separate partition exists for /var/log"
  shell: mount | grep "on /var/log "
  register: var_log_mounted
  changed_when: no
  failed_when: no
  when:
    - u1804cis_rule_1_1_10
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.10
    - skip_ansible_lint

- name: "SCORED | 1.1.11 | PATCH | Ensure separate partition exists for /var/log/audit"
  shell: mount | grep "on /var/log/audit "
  register: var_log_audit_mounted
  changed_when: no
  failed_when: no
  when:
    - u1804cis_rule_1_1_11
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.11
    - skip_ansible_lint

- name: "SCORED | 1.1.12 | PATCH | Ensure separate partition exists for /home"
  shell: mount | grep "/home"
  register: home_mounted
  changed_when: no
  failed_when: no
  when:
    - u1804cis_rule_1_1_12
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.12
    - skip_ansible_lint

- name: "SCORED | 1.1.13 | PATCH | Ensure nodev option set on /home partition"
  mount:
    name: "/home"
    src: "{{ item.device }}"
    state: mounted
    fstype: "{{ item.fstype }}"
    opts: "nodev"
  when:
    - u1804cis_rule_1_1_13
    - item.mount == "/home"
  with_items: "{{ ansible_mounts }}"
  tags:
    - level1
    - level2
    - patch
    - rule_1.1.13

- name: "SCORED | 1.1.14 | PATCH | Ensure nodev option set on /dev/shm partition\n
         SCORED | 1.1.15 | PATCH | Ensure nosuid option set on /dev/shm partition\n
         SCORED | 1.1.16 | PATCH | Ensure noexec option set on /dev/shm partition"
  mount:
    name: /dev/shm
    src: tmpfs
    state: mounted
    fstype: tmpfs
    opts: "defaults,nodev,nosuid,noexec"
  when:
    - u1804cis_rule_1_1_14
    - u1804cis_rule_1_1_15
    - u1804cis_rule_1_1_16
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.14
    - rule_1.1.15
    - rule_1.1.16

- name: "NOTSCORED | 1.1.17 | PATCH | Ensure nodev option set on removable media partitions"
  debug:
    msg: "--> Not relevant"
  changed_when: no
  when:
    - u1804cis_rule_1_1_17
  tags:
    - level1
    - notscored
    - patch
    - rule_1.1.17

- name: "NOTSCORED | 1.1.18 | PATCH | Ensure nosuid option set on removable media partitions"
  debug:
    msg: "--> Not relevant"
  changed_when: no
  when:
    - u1804cis_rule_1_1_18
  tags:
    - level1
    - notscored
    - patch
    - rule_1.1.18

- name: "NOTSCORED | 1.1.19 | PATCH | Ensure noexec option set on removable media partitions"
  debug:
    msg: "--> Not relevant"
  changed_when: no
  when:
    - u1804cis_rule_1_1_19
  tags:
    - level1
    - notscored
    - patch
    - rule_1.1.19

- name: "SCORED | 1.1.20 | PATCH | Ensure sticky bit is set on all world-writable directories"
  shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d -perm -0002 2>/dev/null | xargs chmod a+t
  changed_when: no
  failed_when: no
  #when: sticky_bit_on_worldwritable_dirs_audit.rc == '0'
  when:
    - u1804cis_rule_1_1_20
  tags:
    - level1
    - level2
    - patch
    - rule_1.1.20

- name: "SCORED | 1.1.21 | PATCH | Disable Automounting"
  service:
    name: autofs
    enabled: no
  when:
    - u1804cis_allow_autofs == false and autofs_service_status.stdout == "loaded"
    - u1804cis_rule_1_1_21
  tags:
    - level1
    - patch
    - rule_1.1.21

- name: "NOTSCORED | 1.2.1 | PATCH | Ensure package manager repositories are configured"
  command: apt-cache policy
  register: apt_configured
  changed_when: no
  failed_when: no
  when:
    - u1804cis_rule_1_2_1
  tags:
    - level1
    - notscored
    - patch
    - rule_1.2.1
    - skip_ansible_lint

- name: "SCORED | 1.2.2 | PATCH | Ensure GPG keys are configured"
  command: apt-key list
  register: apt_keys
  changed_when: no
  failed_when: no
  when:
    - u1804cis_rule_1_2_1
  tags:
    - level1
    - notscored
    - patch
    - rule_1.2.1
    - skip_ansible_lint

- name: "SCORED | 1.3.1 | PATCH | Ensure AIDE is installed"
  apt:
    name: aide
    state: present
  when:
    - u1804cis_rule_1_3_1
  tags:
    - level1
    - scored
    - aide
    - patch
    - rule_1.3.1

- name: "SCORED | 1.3.1 | PATCH | Ensure AIDE is installed"
  command: /usr/sbin/aide --init -B 'database_out=file:/var/lib/aide/aide.db.gz'
  args:
    creates: /var/lib/aide/aide.db.gz
  changed_when: no
  failed_when: no
  async: 45
  poll: 0
  when:
    - u1804cis_config_aide
    - u1804cis_rule_1_3_1
  tags:
    - level1
    - scored
    - aide
    - patch
    - rule_1.3.1

- name: "SCORED | 1.3.2 | PATCH | Ensure filesystem integrity is regularly checked"
  cron:
    name: Run AIDE integrity check
    cron_file: "{{ u1804cis_aide_cron['cron_file'] }}"
    user: "{{ u1804cis_aide_cron['cron_user'] }}"
    minute: "{{ u1804cis_aide_cron['aide_minute'] | default('0') }}"
    hour: "{{ u1804cis_aide_cron['aide_hour'] | default('5') }}"
    day: "{{ u1804cis_aide_cron['aide_day'] | default('*') }}"
    month: "{{ u1804cis_aide_cron['aide_month'] | default('*') }}"
    weekday: "{{ u1804cis_aide_cron['aide_weekday'] | default('*') }}"
    job: "{{ u1804cis_aide_cron['aide_job'] }}"
  when:
    - u1804cis_rule_1_3_2
  tags:
    - level1
    - scored
    - aide
    - file_integrity
    - patch
    - rule_1.3.2

- name: "SCORED | 1.4.1 | PATCH | Ensure permissions on bootloader config are configured"
  stat:
    path: /etc/grub2.cfg
  register: grub_cfg
  when:
    - u1804cis_rule_1_4_1
  tags:
    - level1
    - scored
    - grub
    - patch
    - rule_1.4.1

- name: "SCORED | 1.4.1 | PATCH | Ensure permissions on bootloader config are configured"
  file:
    path: "{{ grub_cfg.stat.lnk_source }}"
    owner: root
    group: root
    mode: 0600
  when:
    - grub_cfg.stat.exists and grub_cfg.stat.islnk
    - u1804cis_rule_1_4_1
  tags:
    - level1
    - scored
    - grub
    - patch
    - rule_1.4.1

- name: "SCORED | 1.4.2 | PATCH | Ensure bootloader password is set"
  grub_crypt:
    password: "{{ u1804cis_bootloader_password }}"
  register: grub_pass
  when:
    - u1804cis_set_boot_pass
    - u1804cis_rule_1_4_2
  tags:
    - level1
    - scored
    - grub
    - patch
    - rule_1.4.2

- name: "SCORED | 1.4.2 | PATCH | Ensure bootloader password is set"
  template:
    src: etc/grub.d/grub_custom_file.j2
    dest: /etc/grub.d/{{ custom_grub_file }}
    owner: root
    group: root
    mode: 0755
  notify: generate new grub config
  when:
    - u1804cis_set_boot_pass and grub_pass is defined and grub_pass.passhash is defined and grub_pass.passhash != ''
    - u1804cis_rule_1_4_2
  tags:
    - level1
    - scored
    - grub
    - patch
    - rule_1.4.2

- name: "NOTSCORED | 1.4.3 | PATCH | Ensure authentication required for single user mode"
  shell: grep "^root:[*\!]:" /etc/shadow
  register: root_password_set
  when:
    - u1804cis_rule_1_4_3
  tags:
    - level1
    - level2
    - patch
    - rule_1.4.3

- name: "SCORED | 1.5.1 | PATCH | Ensure core dumps are restricted"
  lineinfile:
    state: present
    dest: /etc/security/limits.conf
    regexp: '^#?\\*.*core'
    line: '*                hard    core            0'
    insertbefore: '^# End of file'
  when:
    - u1804cis_rule_1_5_1
  tags:
    - level1
    - scored
    - limits
    - patch
    - rule_1.5.1

- name: "SCORED | 1.5.1 | PATCH | Ensure core dumps are restricted"
  sysctl:
    name: fs.suid_dumpable
    value: 0
    state: present
    reload: yes
    sysctl_set: yes
    ignoreerrors: yes
  when:
    - u1804cis_rule_1_5_1
  tags:
    - level1
    - scored
    - sysctl
    - patch
    - rule_1.5.1

- name: "NOTSCORED | 1.5.2 | PATCH | Ensure XD/NX support is enabled"
  shell: dmesg|grep "NX" | grep " active"
  changed_when: no
  when:
    - u1804cis_rule_1_5_2
  tags:
    - level1
    - level2
    - patch
    - rule_1.5.2

- name: "SCORED | 1.5.3 | PATCH | Ensure address space layout randomization (ASLR) is enabled"
  sysctl:
      name: kernel.randomize_va_space
      value: 2
      state: present
      reload: yes
      sysctl_set: yes
      ignoreerrors: yes
  when:
    - u1804cis_rule_1_5_3
  tags:
    - level1
    - scored
    - patch
    - rule_1.5.3

- name: "SCORED | 1.5.4 | PATCH | Ensure prelink is disabled"
  command: prelink -ua
  when:
    - prelink_installed.rc == 0
    - u1804cis_rule_1_5_4
  tags:
    - level1
    - scored
    - patch
    - rule_1.5.4

- name: "SCORED | 1.5.4 | PATCH | Ensure prelink is disabled"
  apt:
    name: prelink
    state: absent
  when:
    - u1804cis_rule_1_5_4
  tags:
    - level1
    - scored
    - patch
    - rule_1.5.4

- name: "SCORED | 1.6.1.1 | PATCH | Ensure SELinux is not disabled in bootloader configuration"
  replace:
      dest: /etc/default/grub
      regexp: '(selinux|enforcing)\s*=\s*0\s*'
      follow: yes
  register: selinux_grub_patch
  ignore_errors: yes
  notify: generate new grub config
  when:
    - u1804cis_rule_1_6_1_1
  tags:
    - level2
    - scored
    - patch
    - rule_1.6.1.1

- name: "SCORED | 1.6.1.2 | PATCH | Ensure the SELinux state is enforcing\n
         SCORED | 1.6.1.3 | PATCH | Ensure SELinux policy is configured\n
          | drop custom /etc/selinux/config"
  template:
    src: etc/selinux/config.j2
    dest: /etc/selinux/config
    owner: root
    group: root
    mode: 0644
  notify: restart selinux
  when:
    - not u1804cis_selinux_disable
    - u1804cis_rule_1_6_1_2
    - u1804cis_rule_1_6_1_3
  tags:
    - level2
    - scored
    - selinux
    - patch
    - rule_1.6.1.2
    - rule_1.6.1.3

- name: "SCORED | 1.6.1.4 | PATCH | Ensure no unconfied daemons exist"
  shell: ps -eZ | egrep "initrc" | egrep -vw "tr|ps|egrep|bash|awk" | tr ':' ' ' | awk '{ print $NF }'
  changed_when: no
  when:
    - u1804cis_rule_1_6_1_4
  tags:
    - level2
    - scored
    - patch
    - rule_1.6.1.4

- name: "SCORED | 1.6.2.1 | PATCH | Ensure AppArmor is not disabled in bootloader configuration"
  replace:
    dest: /etc/default/grub
    regexp: '(apparmor)\s*=\s*0\s*'
    follow: yes
  register: apparmor_grub_patch
  ignore_errors: yes
  notify: generate new grub config
  when:
    - u1804cis_rule_1_6_2_1
  tags:
    - level2
    - scored
    - patch
    - rule_1.6.2.1

- name: "SCORED | 1.6.2.2 | PATCH | Ensure all AppArmor Profiles are enforcing"
  shell: apparmor_status
  register: apparmor_status
  when:
    - not u1804cis_apparmor_disable
    - u1804cis_rule_1_6_2_2
  tags:
    - level2
    - scored
    - patch
    - rule_1.6.2.2

- name: "SCORED | 1.6.2.2 | PATCH | Ensure all AppArmor Profiles are enforcing"
  shell: aa-enforce /etc/apparmor.d/*
  # I'm not quite sure if this is working, but its what the Benchmark says for remediation
  ignore_errors: yes
  when:
    - not u1804cis_apparmor_disable
    - u1804cis_rule_1_6_2_2
  tags:
    - level2
    - scored
    - patch
    - rule_1.6.2.2

- name: "SCORED | 1.6.3 | PATCH | Ensure SELinux or AppArmor are installed"
  apt:
    name: selinux
    state: present
  when:
    - not u1804cis_selinux_disable
    - u1804cis_rule_1_6_3
  tags:
    - level2
    - scored
    - patch
    - rule_1.6.3

- name: "SCORED | 1.6.3 | PATCH | Ensure SELinux or AppArmor are installed"
  apt:
    name: apparmor
    state: present
  when:
    - not u1804cis_apparmor_disable
    - u1804cis_rule_1_6_3
  tags:
    - level2
    - scored
    - patch
    - rule_1.6.3

- name: "SCORED | 1.7.1.1 | PATCH | Ensure message of the day is configured properly"
  template:
    src: etc/motd.j2
    dest: /etc/motd
  when:
    - u1804cis_rule_1_7_1_1
  tags:
    - level1
    - banner
    - patch
    - rule_1.7.1.1

- name: "NOTSCORED | 1.7.1.2 | PATCH | Ensure local login warning banner is configured properly"
  template:
    src: etc/issue.j2
    dest: /etc/issue
  when:
    - u1804cis_rule_1_7_1_2
  tags:
    - level1
    - patch
    - rule_1.7.1.2

- name: "NOTSCORED | 1.7.1.3 | PATCH | Ensure remote login warning banner is configured properly"
  template:
    src: etc/issue.net.j2
    dest: /etc/issue.net
  when:
    - u1804cis_rule_1_7_1_3
  tags:
    - level1
    - banner
    - patch
    - rule_1.7.1.3

- name: "NOTSCORED | 1.7.1.4 | PATCH | Ensure permissions on /etc/motd are configured"
  file:
    dest: /etc/motd
    state: file
    owner: root
    group: root
    mode: 0644
  when:
    - u1804cis_rule_1_7_1_4
  tags:
    - level1
    - perms
    - patch
    - rule_1.7.1.4

- name: "SCORED | 1.7.1.5 | PATCH | Ensure permissions on /etc/issue are configured"
  file:
    dest: /etc/issue
    state: file
    owner: root
    group: root
    mode: 0644
  when:
    - u1804cis_rule_1_7_1_5
  tags:
    - level1
    - perms
    - patch
    - rule_1.7.1.5

- name: "NOTSCORED | 1.7.1.6 | PATCH | Ensure permissions on /etc/issue.net are configured"
  file:
    dest: /etc/issue.net
    state: file
    owner: root
    group: root
    mode: 0644
  when:
    - u1804cis_rule_1_7_1_6
  tags:
    - level1
    - perms
    - patch
    - rule_1.7.1.6

- name: "SCORED | 1.7.2 | PATCH | Ensure GDM login banner is configured"
  lineinfile:
    dest: "{{ item.file }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    create: yes
    owner: root
    group: root
    mode: 0644
  with_items:
    - { file: '/etc/gdm3/greeter.dconf-defaults', regexp:  '\[org\/gnome\/login-screen\]', line: '[org/gnome/login-screen]' }
    - { file: '/etc/gdm3/greeter.dconf-defaults', regexp:  'banner-message-enable', line: 'banner-message-enable=true' }
    - { file: '/etc/gdm3/greeter.dconf-defaults', regexp:  'banner-message-text', line: "banner-message-text='{{ u1804cis_warning_banner }}' " }
  when:
    - u1804cis_gui
    - u1804cis_rule_1_7_2
  tags:
    - level1
    - level2
    - patch
    - rule_1.7.2

- name: "NOTSCORED | 1.8 | PATCH | Ensure updates, patches, and additional security software are installed"
  apt:
    name: "*"
    update_cache: yes
    state: latest
  when:
    - u1804cis_rule_1_8
  tags:
    - level1
    - level2
    - patch
    - rule_1.8
    - skip_ansible_lint
